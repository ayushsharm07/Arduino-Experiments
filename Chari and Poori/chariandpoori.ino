


// Code written by Srihari Ayapila - email ->  16bec021@smvdu.ac.in

// This program requires a Nokia 5110 LCD module.

//The connections I made were :
//      SCK  - Pin 7
//      MOSI - Pin 6
//      DC   - Pin 5
//      RST  - Pin 3
//      CS   - Pin 4
//

#include <Adafruit_GFX.h>
#include <LCD5110_Graph.h>
#include <avr/pgmspace.h>


LCD5110 lcd(7,6,5,9,4);

const uint8_t chariWidth    = 14;
const uint8_t chariHeight   = 20;
const uint8_t pooriWidth    = 14;
const uint8_t pooriHeight   = 20;

char chariXpos = 20;
char chariYpos = 10;
char pooriXpos = 0;
char pooriYpos = 10;

const uint8_t fwdBtn = 2;
const uint8_t revBtn = 3;


int flag = 0;

const uint8_t PROGMEM chari[] = { 
    0x00, 0x10, 0x10, 0x18, 0x78, 0x94, 0x8c, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x38, 0x8c, 0xfa, 0x1b, 0x1a, 0xf4, 0x84, 0x04, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00, 0x03, 0x02, 0x03, 0x00, 0x00, 0x00, 0x00
};

const uint8_t PROGMEM revchari[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x8c, 0x94, 0x78, 0x18, 0x10, 0x10, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x04, 0x84, 0xf4, 0x1a, 0x1b, 0xfa, 0x8c, 0x38, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x03, 0x00, 0x00, 0x03, 0x03, 0x03, 0x00, 0x00
};
const uint8_t PROGMEM poori[] = { 
  0x00, 0x00, 0x80, 0xc0, 0x40, 0x40, 0x40, 0xc0, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x01, 0x03, 0x02, 0x02, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

const uint8_t PROGMEM gameover[] = { 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xfc, 0x83, 0x33, 0x33, 0xf3, 0xf0, 0x00, 0xf0, 0xfc, 0xcf, 0xc3, 0xcf, 0xfc, 0xf0, 0x00, 0xff, 0xff, 0x07, 0x0e, 0x0c, 0x06, 0x07, 0xff, 0xff, 0x00, 0xff, 0xff, 0x33, 0x33, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x83, 0x01, 0x83, 0xff, 0x7c, 0x00, 0x03, 0xff, 0xfc, 0x00, 0x00, 0xfc, 0xff, 0x03, 0x00, 0xff, 0xff, 0x33, 0x33, 0x33, 0x00, 0x00, 0xff, 0xff, 0x63, 0xff, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x03, 0x03, 0x01, 0x01, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x03, 0x03, 0x83, 0x83, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x03, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x03, 0x03, 0x03, 0x00, 0x00, 0x03, 0x03, 0x00, 0x01, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7c, 0xff, 0x83, 0x01, 0x83, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0xc7, 0xde, 0xdf, 0xc7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0f, 0x0f, 0x0f, 0x0f, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

void setup()
{
  lcd.InitLCD();
  attachInterrupt(0,chari_fwd,RISING);
  attachInterrupt(1,chari_rev,RISING);
}

 
void loop()
{

  
  lcd.clrScr();
  if(flag ==0)
  {lcd.drawBitmap(chariXpos,chariYpos,revchari,14,20);
  }

  if(flag ==1)
  {lcd.drawBitmap(chariXpos,chariYpos,chari,14,20);
  }
  
  lcd.update();

  


//lcd.clrScr();
//lcd.drawBitmap(0,0,gameover,84,48);
//lcd.update();
//delay(3000);
//chariXpos = 20;
//chariYpos  = 10;
//pooriXpos = 0;
//pooriYpos = 10;


}

void chari_fwd() {

   chariXpos+=1;
   flag = 1;

}

void chari_rev()
{

  chariXpos -=1;
  flag = 0;

}
